name: Build and Deploy sub-action
on:
  workflow_call:
    # Define the inputs required for the action to run
    inputs:
      # The environment where the deployment should occur
      env:
        required: true
        type: string
        description: The environment where the deployment should occur (e.g. dev, staging, prod).

      # The awk command to update the version environment variable
      awk:
        required: true
        type: string
        description: The awk command to update the version environment variable.

      # The rails command for a sanity check
      rails:
        required: false
        type: string
        default: echo "continuing."
        description: The rails command for a sanity check.

      # The branch where the action should be triggered
      branch:
        required: false
        type: string
        default: ${{ github.ref }}
        description: The branch where the action should be triggered.

    # Define the secrets required for the action to run
    secrets:
      # GitHub Personal Access Token for logging into GitHub
      GH_PAT:
        description: 'Personal Access Token (PAT) for logging into GitHub'
        required: true

      # Docker registry login credentials
      DOCKER:
        description: 'Docker registry login credentials'
        required: true

      # Private key for signing commits and tags with GPG
      GPG_PRIVATE_KEY:
        description: 'Private key for signing commits and tags with GPG'
        required: true

      # Passphrase for using the GPG private key
      GPG_PASSPHRASE:
        description: 'Passphrase for using the GPG private key'
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    steps:
      # Checkout the specified branch from GitHub
    - uses: actions/checkout@v3
      with:
        ref: ${{ inputs.branch }}
        ssh-key: ${{ secrets.GH_PAT }}

      # Import the GPG key for signing Git commits and tags
    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}
        git_user_signingkey: true
        git_tag_gpgsign: true
        git_commit_gpgsign: true

      # Get the current version from the 'VERSION' file
    - name: get Version
      run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV

      # Sanity check the version we are trying to release
    - name: Sanity Check Branch
      run: ${{ inputs.rails }}

      # Login to the Docker registry
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: quaibuild
        password: ${{ secrets.DOCKER }}
      
      # Build and push the Docker image to the registry
    - name: Build Docker
      run: docker build -t quainetwork/go-quai-stratum:${{ env.VERSION }} .

    - name: Push to Docker Hub
      run: docker push quainetwork/go-quai-stratum:${{ env.VERSION }}

      # Tag the Git repository with the current version
    - name: git tag
      run: git tag -s ${{ env.VERSION }} -m ${{ env.VERSION }} && git push origin tag ${{ env.VERSION }}

      # Rev the version
    - name: Update version environment variable
      run: echo "VERSION=$(echo $VERSION | ${{ inputs.awk  }})" >> $GITHUB_ENV

      # Update the 'VERSION' file to reflect the rev'd version
    - name: Update VERSION file 
      run: echo "$VERSION" > VERSION 

    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        branch: ${{ inputs.branch }}
        commit_message: Rev'd 'VERSION' file to ${{ env.VERSION }}
        commit_options: -S
        commit_user_email: ci@dominantstrategies.io
        commit_user_name: ci-dominantstrategies
